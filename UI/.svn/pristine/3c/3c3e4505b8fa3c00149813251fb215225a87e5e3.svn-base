//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.18052
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UI.LobbyFunctions {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://soap.network/", ConfigurationName="LobbyFunctions.SOAPFunctions")]
    public interface SOAPFunctions {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://soap.network/SOAPFunctions/createServerRequest", ReplyAction="http://soap.network/SOAPFunctions/createServerResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string createServer(string arg0, string arg1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://soap.network/SOAPFunctions/createServerRequest", ReplyAction="http://soap.network/SOAPFunctions/createServerResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> createServerAsync(string arg0, string arg1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://soap.network/SOAPFunctions/deleteServerRequest", ReplyAction="http://soap.network/SOAPFunctions/deleteServerResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string deleteServer(string arg0, string arg1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://soap.network/SOAPFunctions/deleteServerRequest", ReplyAction="http://soap.network/SOAPFunctions/deleteServerResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> deleteServerAsync(string arg0, string arg1);
        
        // CODEGEN: Parameter "return" erfordert zusätzliche Schemainformationen, die nicht mit dem Parametermodus erfasst werden können. Das spezifische Attribut ist "System.Xml.Serialization.XmlArrayAttribute".
        [System.ServiceModel.OperationContractAttribute(Action="http://soap.network/SOAPFunctions/getServerListRequest", ReplyAction="http://soap.network/SOAPFunctions/getServerListResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        UI.LobbyFunctions.getServerListResponse getServerList(UI.LobbyFunctions.getServerListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://soap.network/SOAPFunctions/getServerListRequest", ReplyAction="http://soap.network/SOAPFunctions/getServerListResponse")]
        System.Threading.Tasks.Task<UI.LobbyFunctions.getServerListResponse> getServerListAsync(UI.LobbyFunctions.getServerListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://soap.network/SOAPFunctions/registerClientRequest", ReplyAction="http://soap.network/SOAPFunctions/registerClientResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string registerClient(string arg0, string arg1, string arg2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://soap.network/SOAPFunctions/registerClientRequest", ReplyAction="http://soap.network/SOAPFunctions/registerClientResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> registerClientAsync(string arg0, string arg1, string arg2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://soap.network/SOAPFunctions/getClientListRequest", ReplyAction="http://soap.network/SOAPFunctions/getClientListResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string getClientList(string arg0);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://soap.network/SOAPFunctions/getClientListRequest", ReplyAction="http://soap.network/SOAPFunctions/getClientListResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> getClientListAsync(string arg0);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getServerList", WrapperNamespace="http://soap.network/", IsWrapped=true)]
    public partial class getServerListRequest {
        
        public getServerListRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getServerListResponse", WrapperNamespace="http://soap.network/", IsWrapped=true)]
    public partial class getServerListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute()]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] @return;
        
        public getServerListResponse() {
        }
        
        public getServerListResponse(string[] @return) {
            this.@return = @return;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SOAPFunctionsChannel : UI.LobbyFunctions.SOAPFunctions, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SOAPFunctionsClient : System.ServiceModel.ClientBase<UI.LobbyFunctions.SOAPFunctions>, UI.LobbyFunctions.SOAPFunctions {
        
        public SOAPFunctionsClient() {
        }
        
        public SOAPFunctionsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SOAPFunctionsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SOAPFunctionsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SOAPFunctionsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string createServer(string arg0, string arg1) {
            return base.Channel.createServer(arg0, arg1);
        }
        
        public System.Threading.Tasks.Task<string> createServerAsync(string arg0, string arg1) {
            return base.Channel.createServerAsync(arg0, arg1);
        }
        
        public string deleteServer(string arg0, string arg1) {
            return base.Channel.deleteServer(arg0, arg1);
        }
        
        public System.Threading.Tasks.Task<string> deleteServerAsync(string arg0, string arg1) {
            return base.Channel.deleteServerAsync(arg0, arg1);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UI.LobbyFunctions.getServerListResponse UI.LobbyFunctions.SOAPFunctions.getServerList(UI.LobbyFunctions.getServerListRequest request) {
            return base.Channel.getServerList(request);
        }
        
        public string[] getServerList() {
            UI.LobbyFunctions.getServerListRequest inValue = new UI.LobbyFunctions.getServerListRequest();
            UI.LobbyFunctions.getServerListResponse retVal = ((UI.LobbyFunctions.SOAPFunctions)(this)).getServerList(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<UI.LobbyFunctions.getServerListResponse> UI.LobbyFunctions.SOAPFunctions.getServerListAsync(UI.LobbyFunctions.getServerListRequest request) {
            return base.Channel.getServerListAsync(request);
        }
        
        public System.Threading.Tasks.Task<UI.LobbyFunctions.getServerListResponse> getServerListAsync() {
            UI.LobbyFunctions.getServerListRequest inValue = new UI.LobbyFunctions.getServerListRequest();
            return ((UI.LobbyFunctions.SOAPFunctions)(this)).getServerListAsync(inValue);
        }
        
        public string registerClient(string arg0, string arg1, string arg2) {
            return base.Channel.registerClient(arg0, arg1, arg2);
        }
        
        public System.Threading.Tasks.Task<string> registerClientAsync(string arg0, string arg1, string arg2) {
            return base.Channel.registerClientAsync(arg0, arg1, arg2);
        }
        
        public string getClientList(string arg0) {
            return base.Channel.getClientList(arg0);
        }
        
        public System.Threading.Tasks.Task<string> getClientListAsync(string arg0) {
            return base.Channel.getClientListAsync(arg0);
        }
    }
}
