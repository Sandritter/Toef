<!--
    Window to display the world's tiles and partizipants
    Also visualizes the GUI and loadscreen
-->
<Window x:Class="UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:meinprojekt="clr-namespace:UI"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:com="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WPF45"
        xmlns:local="clr-namespace:Util"
        xmlns:settings="clr-namespace:UI.Properties"
        Title="MainWindow" Height="350" Width="525"
        WindowStyle="None" ResizeMode="NoResize"
        WindowStartupLocation="CenterScreen" WindowState="Maximized"
        DataContext="{Binding Source={StaticResource Locator}, Path=Map}">

  <Window.Resources>
    <!-- Converter -->
    <meinprojekt:TilePosConverter x:Key="TilePosConverter" />
    <meinprojekt:ParticipantPosConverter x:Key="ParticipantPosConverter" />
    <meinprojekt:BoolToVisConverter x:Key="BoolToVisConverter" />
  </Window.Resources>

  <Window.Background>
    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
      <GradientStop Color="#FF2B2B2B" Offset="0"/>
      <GradientStop Color="#FF3E3E3E" Offset="1"/>
    </LinearGradientBrush>
  </Window.Background>

  <Grid>
    <!-- User Interface -->
    <meinprojekt:GuiUserControl Panel.ZIndex="4" Visibility="{Binding Source={StaticResource Locator}, Path=Map.MenuVisibility, Converter={StaticResource BoolToVisConverter}}"/>
    <meinprojekt:LoadScreenUserControl Panel.ZIndex="10" Visibility="{Binding Source={StaticResource Locator}, Path=Map.LoadScreenVisibility, Converter={StaticResource BoolToVisConverter}}"/>
    <!-- Tiles -->
    <DockPanel Panel.ZIndex="0" DataContext="{Binding Source={StaticResource Locator}, Path=Map}"
               HorizontalAlignment="Stretch" LastChildFill="True" VerticalAlignment="Stretch">

      <ScrollViewer DataContext="{Binding Source={StaticResource Locator}, Path=Zoom}"
                    x:Name="MapScrollViewer"
                    DockPanel.Dock="Top" VerticalAlignment="Stretch"
                    HorizontalAlignment="Stretch"
                    HorizontalScrollBarVisibility="Hidden"
                    VerticalScrollBarVisibility="Hidden"
                    local:ScrollViewerBinding.HorizontalOffset="{Binding HorizontalScrollOffset, Mode=TwoWay}"
                    local:ScrollViewerBinding.VerticalOffset="{Binding VerticalScrollOffset, Mode=TwoWay}">
        <Canvas DataContext="{Binding Source={StaticResource Locator}, Path=Zoom}"
                Width="{Binding Source={StaticResource Locator}, Path=Map.MAP_WIDTH}"
                Height="{Binding Source={StaticResource Locator}, Path=Map.MAP_HEIGHT}">
          <ItemsControl Panel.ZIndex="0"
                        DataContext="{Binding Source={StaticResource Locator}, Path=Map}"
                        ItemsSource="{Binding Tiles, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" >

            <ItemsControl.Template>
              <ControlTemplate TargetType="ItemsControl">
                <ItemsPresenter/>
              </ControlTemplate>
            </ItemsControl.Template>

            <ItemsControl.ItemsPanel>
              <ItemsPanelTemplate>
                <Canvas />
              </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemContainerStyle>
              <Style>
                <Setter Property="Canvas.Top" Value="{Binding Y, Converter={StaticResource TilePosConverter}, ConverterParameter=y}" />
                <Setter Property="Canvas.Left" Value="{Binding X, Converter={StaticResource TilePosConverter}, ConverterParameter=x}" />
              </Style>
            </ItemsControl.ItemContainerStyle>
            <ItemsControl.ItemTemplate>
              <DataTemplate>
                <DataTemplate.Resources>
                  <Style TargetType="TextBlock">
                    <Setter Property="FontSize" Value="18"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                  </Style>
                </DataTemplate.Resources>
                <Image Height="{Binding Source={x:Static settings:Settings.Default}, Path=TileSize}"
                       Width="{Binding Source={x:Static settings:Settings.Default}, Path=TileSize}"
                       Source="{Binding Path=BmImage, UpdateSourceTrigger=PropertyChanged}"
                       RenderTransformOrigin="0.5,0.5">
                  <Image.RenderTransform>
                    <TransformGroup>
                      <ScaleTransform/>
                      <SkewTransform/>
                      <RotateTransform Angle="{Binding Path=Rotation, UpdateSourceTrigger=PropertyChanged}"/>
                      <TranslateTransform/>
                    </TransformGroup>
                  </Image.RenderTransform>

                  <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseEnter" >
                      <com:EventToCommand CommandParameter="{Binding}"
                                          Command="{Binding DataContext.TileEnterCommand , RelativeSource={RelativeSource AncestorType=ItemsControl}}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseLeftButtonDown" >
                      <com:EventToCommand CommandParameter="{Binding}"
                                          Command="{Binding DataContext.TileDownCommand , RelativeSource={RelativeSource AncestorType=ItemsControl}}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseRightButtonDown" >
                      <com:EventToCommand CommandParameter="{Binding}"
                                          Command="{Binding DataContext.TileDownCommandR , RelativeSource={RelativeSource AncestorType=ItemsControl}}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseLeftButtonUp">
                      <com:EventToCommand CommandParameter="{Binding}"
                                          Command="{Binding DataContext.TileUpCommand , RelativeSource={RelativeSource AncestorType=ItemsControl}}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="PreviewMouseWheel">
                      <com:EventToCommand PassEventArgsToCommand="True"
                                          Command="{Binding DataContext.TileRotateCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}"/>
                    </i:EventTrigger>
                  </i:Interaction.Triggers>
                </Image>
              </DataTemplate>
            </ItemsControl.ItemTemplate>
          </ItemsControl>

          <!-- Start NewTile -->
          <Image Width="{Binding Source={x:Static settings:Settings.Default}, Path=TileSize}"
                 Height="{Binding Source={x:Static settings:Settings.Default}, Path=TileSize}"
                 DataContext="{Binding Source={StaticResource Locator}, Path=Map}"
                 IsHitTestVisible ="False"
                 Panel.ZIndex="2"
                 Canvas.Top="{Binding NewTile.Y, Converter={StaticResource TilePosConverter}, ConverterParameter=y}"
                 Canvas.Left="{Binding NewTile.X, Converter={StaticResource TilePosConverter}, ConverterParameter=x}"
                 Source="{Binding NewTile.BmImage, UpdateSourceTrigger=PropertyChanged}" RenderTransformOrigin="0.5,0.5">
            <Image.RenderTransform>
              <TransformGroup>
                <ScaleTransform/>
                <SkewTransform/>
                <RotateTransform Angle="{Binding Path=NewTile.Rotation, UpdateSourceTrigger=PropertyChanged}"/>
                <TranslateTransform/>
              </TransformGroup>
            </Image.RenderTransform>
            <Image.BitmapEffect>
              <DropShadowBitmapEffect Color="Black"
                                      ShadowDepth="0"
                                      Softness="3" />
            </Image.BitmapEffect>
          </Image>
          <!-- End NewTile -->

          <!-- Start ErrorMark -->
          <Image Width="{Binding Source={x:Static settings:Settings.Default}, Path=TileSize}"
                 Height="{Binding Source={x:Static settings:Settings.Default}, Path=TileSize}"
                 DataContext="{Binding Source={StaticResource Locator}, Path=Map}"
                 IsHitTestVisible ="False"
                 Panel.ZIndex="1"
                 Canvas.Top="{Binding NewTile.Y, Converter={StaticResource TilePosConverter}, ConverterParameter=y}"
                 Canvas.Left="{Binding NewTile.X, Converter={StaticResource TilePosConverter}, ConverterParameter=x}"
                 Source="{Binding NewTile.BmImage, UpdateSourceTrigger=PropertyChanged}"
                 Visibility="{Binding IsNotSettable, Converter={StaticResource BoolToVisConverter}}"
                 RenderTransformOrigin="0.5,0.5">
            <Image.RenderTransform>
              <TransformGroup>
                <ScaleTransform/>
                <SkewTransform/>
                <RotateTransform Angle="{Binding Path=NewTile.Rotation, UpdateSourceTrigger=PropertyChanged}"/>
                <TranslateTransform/>
              </TransformGroup>
            </Image.RenderTransform>
            <Image.BitmapEffect>
              <DropShadowBitmapEffect Color="Red" ShadowDepth="0" Softness="5" />
            </Image.BitmapEffect>
          </Image>
          <!-- End ErrorMark -->

          <!-- Start Participants -->
          <ItemsControl Panel.ZIndex="3"
                        DataContext="{Binding Source={StaticResource Locator}, Path=Map}"
                        ItemsSource="{Binding Participants, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
            <ItemsControl.Template>
              <ControlTemplate TargetType="ItemsControl">
                <ItemsPresenter/>
              </ControlTemplate>
            </ItemsControl.Template>

            <ItemsControl.ItemsPanel>
              <ItemsPanelTemplate>
                <Canvas />
              </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemContainerStyle>
              <Style>
                <Setter Property="Canvas.Top" Value="{Binding PosY, Mode=TwoWay, Converter={StaticResource ParticipantPosConverter}, ConverterParameter=y, UpdateSourceTrigger=PropertyChanged}" />
                <Setter Property="Canvas.Left" Value="{Binding PosX, Mode=TwoWay, Converter={StaticResource ParticipantPosConverter}, ConverterParameter=x, UpdateSourceTrigger=PropertyChanged}" />
              </Style>
            </ItemsControl.ItemContainerStyle>
            <ItemsControl.ItemTemplate>
              <DataTemplate>
                <DataTemplate.Resources>
                  <Style TargetType="TextBlock">
                    <Setter Property="FontSize" Value="18"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                  </Style>
                  <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Red" />
                </DataTemplate.Resources>
                <Border BorderThickness="2" CornerRadius="1,1,1,1">
                  <Border.BorderBrush>
                    <SolidColorBrush Color="Red" Opacity="0" />
                  </Border.BorderBrush>
                  <Image IsHitTestVisible="{Binding Source={StaticResource Locator}, Path=Map.HitTestVisible, Mode=TwoWay}"
                         Height="{Binding Source={x:Static settings:Settings.Default}, Path=ParticipantSize}"
                         Width="{Binding Source={x:Static settings:Settings.Default}, Path=ParticipantSize}"
                         Source="{Binding Path=Bitmap, UpdateSourceTrigger=PropertyChanged}"
                         RenderTransformOrigin="0.5,0.5"
                         Cursor="Hand">
                    <Image.RenderTransform>
                      <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="{Binding Path=Rot, UpdateSourceTrigger=PropertyChanged}"/>
                        <TranslateTransform/>
                      </TransformGroup>
                    </Image.RenderTransform>
                    <i:Interaction.Triggers>
                      <i:EventTrigger EventName="MouseLeftButtonDown" >
                        <com:EventToCommand CommandParameter="{Binding}"
                                            Command="{Binding DataContext.CarClickCommand , RelativeSource={RelativeSource AncestorType=ItemsControl}}"/>
                      </i:EventTrigger>
                    </i:Interaction.Triggers>
                  </Image>
                </Border>

              </DataTemplate>
            </ItemsControl.ItemTemplate>
          </ItemsControl>
          <!-- End Participants -->

          <Canvas.LayoutTransform>
            <ScaleTransform
                ScaleX="{Binding Scale, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                ScaleY="{Binding Scale, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
          </Canvas.LayoutTransform>
        </Canvas>
      </ScrollViewer>
    </DockPanel>
  </Grid>
</Window>
